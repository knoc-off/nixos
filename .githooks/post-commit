#!/usr/bin/env bash

# Directory containing the Nix files
SYSTEMS_DIR="systems"
# Directory to store commit messages
COMMIT_MSG_DIR="${SYSTEMS_DIR}/commit-messages"

# Create the commit messages directory if it doesn't exist
mkdir -p "$COMMIT_MSG_DIR"

# Function to process commit message
process_commit_msg() {
    local commit_msg="$1"
    local pad_amount="$2"
    local first_line=$(echo "$commit_msg" | head -n 1)
    local message=$(echo "$first_line" | sed -E 's/^\s+//g' | sed -E 's/\s+$//g' | sed 's/ /_/g' | sed -E 's/[^a-zA-Z0-9:_\.-]//g')

    if [ ${#message} -gt "$pad_amount" ]; then
        message="${message:0:$pad_amount}"
    else
        message="${message}$(printf '%*s' $(($pad_amount-${#message})) | tr ' ' '_')"
    fi

    echo "$message"
}

# Process each Nix file
for nix_file in ${SYSTEMS_DIR}/*.nix; do
    # Skip if no files match the pattern
    [[ -e "$nix_file" ]] || continue

    # Get the latest commit message for this file
    commit_msg=$(git log -1 --pretty=%s -- "$nix_file")

    # Get the global commit message
    global_msg=$(git log -1 --pretty=%s)

    # Calculate pad amount for the file-specific message
    global_msg_length=${#global_msg}
    file_msg_pad_amount=$((100 - global_msg_length))

    # Process the file-specific commit message
    processed_file_msg=$(process_commit_msg "$commit_msg" "$file_msg_pad_amount")

    # Process the global commit message
    processed_global_msg=$(process_commit_msg "$global_msg" "$global_msg_length")

    # Combine the processed messages
    combined_msg="${processed_file_msg}${processed_global_msg}"

    # Create a new file name for the commit message
    filename=$(basename "$nix_file")
    commit_msg_file="${COMMIT_MSG_DIR}/${filename%.*}-commit-message.nix"

    # Write the combined message to the target file
    printf "{\n  system.nixos.label = \"%s\";\n}" "$combined_msg" > "$commit_msg_file"

    # Check if there are changes to commit
    if [[ -n $(git status -s "$commit_msg_file") ]]; then
        # Stage the changes to the target file
        git add "$commit_msg_file"
    fi
done

# Amend the current commit to include all changes
if [[ -n $(git status -s) ]]; then
    git commit --amend --no-edit
fi

exit 0
